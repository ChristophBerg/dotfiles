# $Id$
#echo .env

# Environment

#[ -z "$USER" ] && if [ "$LOGNAME" ] ; then export USER=$LOGNAME
#		else export USER=`logname` ; fi
#: ${ZDOTDIR:=$HOME}

case "$LANG" in
	de_DE.ISO-8859-1|de_DE.UTF-8) ;;
	*) export LANG=de_DE.ISO-8859-1 ;;
esac
export LC_COLLATE=C

export BLOCKSIZE=k
export CVSROOT=":ext:cb@hal.heim-d.uni-sb.de:/home/cb/lib/cvs"
export CVS_RSH=ssh
export EDITOR=vim
: ${HOST:=$HOSTNAME}
: ${HOSTDISPLAY:=$DISPLAY}
export HOST HOSTDISPLAY
case $HOST in *.*) HOST=`echo $HOST | cut -f1 -d.` ;; esac
export PAGER=less
export PGPKEY=0x6D8ABE71
type -p aspell > /dev/null && export SPELL=aspell
export TZ=CET

#export IRCSERVER="irc.uni-stuttgart.de irc.rz.uni-karlsruhe.de"
#export LESS=-aiMq
#export LESSCHARSET=latin1
type -p lesspipe > /dev/null && export LESSOPEN='|lesspipe %s'
#export LOGNAME=$USER
[ -f /var/mail/$USER ] && export MAIL="/var/mail/$USER"
#[ -f ~/.lynx_bookmarks.html ] && export WWW_HOME=~/.lynx_bookmarks.html
#[ -f ~/.netscape/bookmarks.html ] && export WWW_HOME=~/.netscape/bookmarks.html

# tmp
if [ -d /tmp/$USER ] ; then
	[ -O /tmp/$USER ] && export TEMP=/tmp/$USER TMP=/tmp/$USER TMPDIR=/tmp/$USER
else
	[ -d $HOME/tmp ] && export TEMP=$HOME/tmp TMP=$HOME/tmp TMPDIR=$HOME/tmp
fi

# try to set $SSH_AUTH_SOCK
if [ ! -S "$SSH_AUTH_SOCK" ] ; then
	[ -f ~/.ssh/agent.sh ] && . ~/.ssh/agent.sh > /dev/null
	[ ! -S "$SSH_AUTH_SOCK" ] && unset SSH_AGENT_PID SSH_AUTH_SOCK
	#echo SSH_AUTH_SOCK=$SSH_AUTH_SOCK
fi

# check whether we run interactively
[ "$PS1" ] || return
#echo ".env: interactive"

# Aliases

# check for GNU utils
if cp --version >& /dev/null ; then
	alias cp='cp -iv'
	alias mv='mv -iv'
	alias rm='rm -iv'
	case "$TERM" in
		linux*|*vt100*|cons25|xterm*|rxvt|screen*|cygwin)
			alias ls='ls -F --color=auto' ;;
		*)	alias ls='ls -F' ;;
	esac
else
	alias cp='cp -i'
	alias mv='mv -i'
	alias rm='rm -i'
	alias ls='ls -F'
fi

alias -- +=pushd
alias -- -=popd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ci='ci -m. -t- -u'
#alias com='cvs commit -m ""'
alias d=date
alias DISPLAY='echo "export DISPLAY=$HOSTDISPLAY" ; echo -n "xauth add " ; xauth list $HOSTDISPLAY'
alias e='$EDITOR'
alias f=finger
alias gv='gv -spartan'
#alias hal='ssh hal.heim-d.uni-sb.de'
alias j='jobs -l'
alias l='ls -al'
alias ll='ls -l'
type -p gmake > /dev/null && alias make=gmake
alias md=mkdir
alias o='$PAGER'
#alias p=pine
#alias pine='pine -id0'
alias pwd='/bin/pwd;builtin pwd'
alias q=exit
alias quit=exit
alias rd=rmdir
alias rehash='hash -r'
alias suspend='suspend -f'
type -p gtar > /dev/null && alias tar=gtar
#alias vim='vim --servername VIM'
type -p ytalk > /dev/null && alias talk='ytalk -x'
alias which='type -p'
alias X='mesg n; exec ssh-agent startx > ~/.xsession-errors 2>&1'
#alias xdvi='EDITOR="vim --servername VIM --remote +%l %f" xdvi'
alias y='echo "Sind wir schon wieder auf der yes-Taste eingeschlafen?"'

# Functions

cd () { builtin cd "${1:-$HOME}" && ls ; }
ncd () { # cd to the "next" directory
	local dir r
	dir=`basename $PWD`
	[ "$1" = -r ] && r=-r
	set `find .. -maxdepth 1 -type d | sort $r`
	while [ "$1" != "../$dir" ] ; do shift ; done
	if [ "$2" ] ; then cd "$2" ; else
		echo "$0: no next directory" 1>&2
		return 1
	fi
}
nd () { mkdir "$1" && cd "$1" ; }
nv () { local nv ; nv=`nv.pl "$@"` && cd "$nv" ; }
vared () {
	local vared
	vared=`mktemp /tmp/vared.XXXXXX`
	( echo -n "$1="\' ; eval echo -n "\$$1" ; echo \' ) > $vared
	${EDITOR:-vi} $vared && . $vared
	/bin/rm -f $vared
}
unalias ttar xtar 2> /dev/null # remove system default
if type -p xtar.pl > /dev/null ; then
	xtar () {
		local xtar
		xtar=`xtar.pl "$@"` && cd "$xtar"
	}
else
	alias xtar='tar xvzf'
fi
