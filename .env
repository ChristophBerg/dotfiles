# $Id$
#echo .env

# Environment

case "$LANG" in
	*.ISO-8859-1|*.UTF-8) ;;
	*) if [ -t 0 ] && { [ -x ~/bin/$OS/utf8term ] || [ -x ~/bin/utf8term ] ; } ; then
		case `utf8term` in
			single*) LANG=de_DE.ISO-8859-1 ;;
			UTF-8*)  LANG=de_DE.UTF-8 ;;
			*) echo "can't parse utf8term output" 2>&1
				LANG=de_DE.UTF-8 ;;
		esac
	else
		LANG=de_DE.UTF-8
	fi ;;
esac
export LANG LC_COLLATE=C

export BLOCKSIZE=k
export CVS_RSH=ssh
export EDITOR=vi
: ${HOST:=$HOSTNAME}
: ${HOSTDISPLAY:=$DISPLAY}
export HOST HOSTNAME HOSTDISPLAY
case $HOST in *.*) HOST=`echo $HOST | cut -f1 -d.` ;; esac # TODO: remove $HOST
case $HOSTNAME in *.*) ;; *) HOSTNAME=`hostname -f` ;; esac # canonize hostname
export PAGER=less
type -p aspell > /dev/null && export SPELL=aspell
export TZ=CET
: ${USER:=$LOGNAME}

type -p lesspipe > /dev/null && export LESSOPEN='|lesspipe %s'
[ -z "$MAIL" ] && [ -f /var/mail/$USER ] && export MAIL="/var/mail/$USER" # MAIL is unset on NetBSD

# try to set $SSH_AUTH_SOCK
if [ ! -S "$SSH_AUTH_SOCK" ] ; then
	[ -f ~/.ssh/agent.sh ] && . ~/.ssh/agent.sh > /dev/null
	[ ! -S "$SSH_AUTH_SOCK" ] && unset SSH_AGENT_PID SSH_AUTH_SOCK
	#echo SSH_AUTH_SOCK=$SSH_AUTH_SOCK
fi

# check whether we run interactively
[ "$PS1" ] || return
#echo ".env: interactive"

# Aliases

# check for GNU utils
if cp --version >& /dev/null ; then
	alias cp='cp -iv'
	alias mv='mv -iv'
	alias rm='rm -iv'
	case "$TERM" in
		linux*|*vt100*|cons25|xterm*|rxvt|screen*|cygwin)
			alias ls='ls -F --color=auto' ;;
		*)	alias ls='ls -F' ;;
	esac
else
	alias cp='cp -i'
	alias mv='mv -i'
	alias rm='rm -i'
	alias ls='ls -F'
fi

if [ `grep --version | head -1 | sed -e 's/.* //'` '>' "2.5" ] ; then
	export GREP_OPTIONS="-d skip --exclude=*.svn-base --exclude tags --exclude *~ --color=auto"
fi

alias -- +=pushd
alias -- -=popd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
#alias ci='ci -m. -t- -u'
alias d=date
#alias DISPLAY='echo "export DISPLAY=$HOSTDISPLAY" ; echo -n "xauth add " ; xauth list $HOSTDISPLAY'
alias debsign='debsign -k$PGPKEY2'
alias 'dpkg-source'='dpkg-source -i".svn/*"'
alias e='$EDITOR'
alias f=finger
alias gv='gv --spartan'
alias j='jobs -l'
alias l='ls -al'
#alias ll='ls -l'
type -p gmake > /dev/null && alias make=gmake
alias md=mkdir
alias o='$PAGER'
alias pwd='/bin/pwd;builtin pwd'
alias q=exit
alias quit=exit
alias r='screen -r'
alias rd=rmdir
alias rehash='hash -r'
type -p gtar > /dev/null && alias tar=gtar
#alias vim='vim --servername VIM'
type -p ytalk > /dev/null && alias talk='ytalk -x'
alias which='type -p'
alias X='mesg n; exec ssh-agent startx > ~/.xsession-errors 2>&1'
#alias xdvi='EDITOR="vim --servername VIM --remote +%l %f" xdvi'
alias y='echo "Sind wir schon wieder auf der yes-Taste eingeschlafen?"'

# Functions

cd () {
	local dir arg opt OPTIND OPTERR
	while getopts "10nprLP" opt ; do
		case $opt in
		1) dir=$(find . -maxdepth 1 -type d -name \* | sort | head -n 1)
		   [ -z "$dir" ] && return 1 ;;
		0) dir=$(find . -maxdepth 1 -type d -name \* | sort -r | head -n 1)
		   [ -z "$dir" ] && return 1 ;;
		n) dir=$(find .. -maxdepth 1 -type d | sort | sed "1,/..\/$(basename "$PWD")\$/d;q")
		   [ -z "$dir" ] && return 1 ;;
		p|r) dir=$(find .. -mindepth 1 -maxdepth 1 -type d | sort -r | sed "0,/..\/$(basename "$PWD")\$/d;q")
		   [ -z "$dir" ] && return 1 ;;
		L|P) arg="-$opt" ;;
		esac
	done
	shift $(($OPTIND - 1))
	builtin cd $arg "${dir:-${1:-$HOME}}" && ls
}
nd () { mkdir "$1" && cd "$1" ; }
nv () { local nv ; nv=`nv.pl "$@"` && cd "$nv" ; }
vared () {
	local vared
	vared=`mktemp /tmp/vared.XXXXXX`
	( echo -n "$1="\' ; eval echo -n "\$$1" ; echo \' ) > $vared
	${EDITOR:-"vi"} $vared && . $vared
	/bin/rm -f $vared
}
unalias ttar xtar 2> /dev/null # remove system default
if type -p xtar.pl > /dev/null ; then
	xtar () {
		local xtar
		xtar=`xtar.pl "$@"` && cd "$xtar"
	}
else
	alias xtar='tar xvzf'
fi

# personal stuff
if [ "$USER" = cb ] ; then
	export DEBEMAIL="myon@debian.org"
	export PGPKEY="0x6D8ABE71"
	export PGPKEY2="0x58510B5A"
fi

# vim:ts=4:sw=4:
