#!/bin/sh

set -eu

CLEAN=yes
GIT=git
PACKAGE=$(dpkg-parsechangelog -SSource)

while getopts "cg" opt ; do
  case $opt in
    c) CLEAN="" ;;
    g) GIT="" ;;
    *) exit 5 ;;
  esac
done
# shift away args
shift $(($OPTIND - 1))

distribution=$(dpkg-parsechangelog -Sdistribution)
if [ "$distribution" = "UNRELEASED" ]; then
  echo "Distribution is UNRELEASED. Fix that before uploading."
  exit 1
fi

[ "$CLEAN" ] && dclean
qpop -a || [ $? = 2 ]
echo

changes=$(ls -t ../*.changes | head -1)
printf '\e[1;34m'
ls -l $changes
printf '\e[0;34m'
cat $changes
printf '\e[0m'

echo
[ -d .git ] && git --no-pager status

if [ ! -f debian/gitlab-ci.yml ] && [ ! -f debian/salsa-ci.yml ]; then
  printf '\e[1;31mNo debian/gitlab-ci.yml found\e[0m\n'
fi

export GPG_TTY="$(tty)"
gpg-connect-agent updatestartuptty /bye > /dev/null

if [ "$GIT" ]; then
  echo
  echo -n "$PACKAGE: Push? "
  read push

  echo "https://pgdgbuild.dus.dg-i.net/job/$PACKAGE/build"

  echo -n "git pull ... "
  git pull --ff-only
  if git status -s | grep -q '^[^?]'; then
    git add -u debian
    debcommit -r --release-use-changelog
  fi
  echo -n "git npush master ... "
  git npush
  echo -n "git npush upstream pristine-tar ... "
  git npush origin upstream:upstream pristine-tar:pristine-tar || :
fi

echo
echo -n "$PACKAGE: Upload? "
read upload

if [ "$GIT" ]; then
  echo -n "git push ... "
  git push
fi
set -x
debsign $changes
dput $changes
