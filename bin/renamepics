#!/usr/bin/perl -w
# cb 001124
# $Id$

use strict;
my $tmp = "renamepics-$$.jpg";
my $xv = 0;
my $offset = 0;
my ($nr, $file, $new);
# -cem: color editor
my @XVOPTIONS = qw/-geometry +0+0 -ceg +0-0 -cge -0+0 -cma/;

#$offset = $ARGV[0] if defined $ARGV[0];
$offset = 0;

# Readline support
use Term::ReadLine;
my $term = new Term::ReadLine "$0";
#my $OUT = $term->OUT || STDOUT;

# spawn xv
sub spawn {
	if (defined ($xv = fork)) {
	        unless ($xv) {
	                exec ("xv", @XVOPTIONS, $tmp);
	                die "Couldn't open xv!\n";
	        }
	} else {
	        die "Could not fork xv: $!";
	}
}

# fixup some insanities
foreach (@ARGV) {
	system "chmod 644 '". join("' '", @ARGV) ."'";
}
foreach (grep /JPG$/, @ARGV) {
	system "mv '$_' '\L$_'";
}

print scalar(@ARGV) ." pictures ";
print "(# will delete picture)\n";

# rename each file
#foreach $file (<[0-9]*.jpg>) {
foreach $file (@ARGV) {
	$file =~ /(\d+)\.jpg/;
	my $number = $1;
	if($number == 0) {
		print "error: $file contains no number.\n";
		next;
	}
	unlink "$tmp";
	symlink $file, $tmp;
	kill "QUIT", $xv if $xv;
	spawn() unless $xv;
	$nr = $number + $offset;
	printf "Enter new name for $file:\n";
	my $prompt = sprintf "%02i-", $nr;
	$new = $term->readline($prompt);
	chomp ($new);
	#$term->addhistory($new);
	if ($new =~ /^#/) {
		print "File $file will be deleted.\n";
		unlink $file;
		next;
	}
	if ($new) {
		$new = sprintf "%02i-$new.jpg", $nr;
	} else {
		$new = sprintf "%02i.jpg", $nr;
	}
	$new =~ s/ /_/g;
	#link $file, $new;
	#system "ls -l $new";
	system "mv '$file' '$new'" if $file ne $new;
}

# clean up	
unlink $tmp;
kill "TERM", $xv;
